//
// Component: Button
//
// ========================================================================


// Variables
// ========================================================================

@button-line-height:                            (@global-control-height - 2);
@button-small-line-height:                      (@global-control-small-height - 2);
@button-large-line-height:                      (@global-control-large-height - 2);

@button-font-size:                              @global-font-size;
@button-small-font-size:                        @global-small-font-size;
@button-large-font-size:                        @global-font-size;

@button-default-background:                     transparent;
@button-default-hover-background:               transparent;
@button-default-active-background:              transparent;

@button-disabled-background:                    transparent;

//
// New
//

@button-border-width:                           @global-border-width;
@button-border-radius:                          @global-border-radius;

@button-default-border:                         @global-border;
@button-default-hover-border:                   darken(@global-border, 20%);
@button-default-active-border:                  darken(@global-border, 30%);

@button-disabled-border:                        @global-border;

@button-font-family:                            @global-font-primary-font-family;
@button-font-weight:                            @global-font-primary-font-weight;
@button-text-transform:                         @global-font-primary-text-transform;
@button-letter-spacing:                         @global-font-primary-letter-spacing;


// Component
// ========================================================================

.hook-button() {
    border: @button-border-width solid transparent;
    border-radius: @button-border-radius;
    font-family: @button-font-family;
    font-weight: @button-font-weight;
    text-transform: @button-text-transform;
    letter-spacing: @button-letter-spacing;
    -webkit-transition: 0.1s ease-in-out;
    transition: 0.1s ease-in-out;
    -webkit-transition-property: color, background-color, border;
    transition-property: color, background-color, border;
}

.hook-button-hover() {}

.hook-button-focus() {}

.hook-button-active() {}


// Style modifiers
// ========================================================================

.hook-button-default() { border-color: @button-default-border; }

.hook-button-default-hover() { border-color: @button-default-hover-border; }

.hook-button-default-active() { border-color: @button-default-active-border; }

//
// Primary
//

.hook-button-primary() {}

.hook-button-primary-hover() {}

.hook-button-primary-active() {}

//
// Success
//

.hook-button-success() {}

.hook-button-success-hover() {}

.hook-button-success-active() {}

//
// Danger
//

.hook-button-danger() {}

.hook-button-danger-hover() {}

.hook-button-danger-active() {}


// Disabled
// ========================================================================

.hook-button-disabled() { border-color: @button-disabled-border; }


// Text modifier
// ========================================================================

.hook-button-text() {
    position: relative;

    &::before {
        content: "";
        position: absolute;
        bottom: 0;
        left: 0;
        right: 100%;
        border-bottom: @global-border-width solid @global-color;
        -webkit-transition: right 0.2s ease-out;
        transition: right 0.3s ease-out;
    }

}

.hook-button-text-hover() {

    &::before { right: 0; }

}

.hook-button-text-disabled() {

    &::before { display: none; }

}


// Link modifier
// ========================================================================

.hook-button-link() {}


// Miscellaneous
// ========================================================================

.hook-button-misc() {

    /* Group
     ========================================================================== */

    /*
     * Collapse border
     */

    .uk-button-group > .uk-button-default:nth-child(n+2),
    .uk-button-group > div:nth-child(n+2) .uk-button-default { margin-left: -@button-border-width; }

    /*
     * Create position context to superimpose the successor elements border
     * Known issue: If you use an `a` element as button and an icon inside,
     * the active state will not work if you click the icon inside the button
     * Workaround: Just use a `button` or `input` element as button
     */

    .uk-button-group .uk-button-default:hover,
    .uk-button-group .uk-button-default:focus,
    .uk-button-group .uk-button-default:active,
    .uk-button-group .uk-button-default.uk-active {
        position: relative;
        z-index: 1;
    }

    /*
     * Reset border-radius
     */

    .uk-button-group > .uk-button:not(:first-child):not(:last-child),
    .uk-button-group > div:not(:first-child):not(:last-child) .uk-button { border-radius: 0; }

    .uk-button-group > .uk-button:first-child,
    .uk-button-group > div:first-child .uk-button {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
    }

    .uk-button-group > .uk-button:last-child,
    .uk-button-group > div:last-child .uk-button {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
    }

}


// Dye
// ========================================================================

.dye-vars-default-theme() {}

.dye-hooks() {

    .hook-dye-button-default() { border-color: fade(@dye-color, 60%); }
    .hook-dye-button-default-hover() { border-color: @dye-color; }
    .hook-dye-button-default-active() { border-color: @dye-color; }

    .hook-dye-button-primary() {}
    .hook-dye-button-primary-hover() {}
    .hook-dye-button-primary-active() {}

    .hook-dye-button-text() {}
    .hook-dye-button-text-hover() {}
    .hook-dye-button-text-disabled() {}

}
