// Name:            Icon
// Description:     Component to create icons
//
// Component:       `uk-icon`
//
// Sub-objects:     `uk-icon-button`
//
// Modifiers:       `uk-icon-image`
//                  `uk-icon-hover`
//
// ========================================================================


// Variables
// ========================================================================

@icon-image-size:                               20px;

@icon-hover-color:                              @global-muted-color;
@icon-hover-hover-color:                        @global-color;

@icon-button-size:                              36px;
@icon-button-border-radius:                     500px;
@icon-button-background:                        @global-muted-background;
@icon-button-color:                             @global-muted-color;

@icon-button-hover-background:                  darken(@icon-button-background, 5%);
@icon-button-hover-color:                       @global-color;

@icon-button-active-background:                 darken(@icon-button-background, 10%);
@icon-button-active-color:                      @global-color;


/* ========================================================================
   Component: Icon
 ========================================================================== */

/*
 * Pass image path to JS
 */

.uk-icon::before { background-image: url("../../images/icons.svg"); }

/*
 * 1. Fill the SVG object with the current text color
 * 2. Let the container fit the height of the icon
 */

.uk-icon {
    display: inline-block;
    /* 1 */
    fill: currentcolor;
    /* 2 */
    line-height: 0;
}

/* Let the line drawn around the SVG object use the current text color
 * But only if a `stroke-width` attribute is present, because its default value is `1`
 */

.uk-icon [stroke-width] { stroke: currentcolor; }

/*
 * Fix Firefox blurry SVG rendering: https://bugzilla.mozilla.org/show_bug.cgi?id=1046835
 */

.uk-icon > * { transform: translate(0,0); }


/* Image modifier
 ========================================================================== */

/*
 * Display images in icon dimensions
 */

.uk-icon-image {
    width: @icon-image-size;
    height: @icon-image-size;
    background-position: 50% 50%;
    background-repeat: no-repeat;
    background-size: contain;
    vertical-align: middle;
}


/* Hover modifier
 ========================================================================== */

.uk-icon-hover {
    color: @icon-hover-color;
    .hook-icon-hover;
}

.uk-icon-hover:hover,
.uk-icon-hover:focus {
    color: @icon-hover-hover-color;
    outline: none;
    .hook-icon-hover-hover;
}


/* Button
 ========================================================================== */

/*
 * 1. Center icon vertically and horizontally
 */

.uk-icon-button {
    box-sizing: border-box;
    width: @icon-button-size;
    height: @icon-button-size;
    border-radius: @icon-button-border-radius;
    background-color: @icon-button-background;
    color: @icon-button-color;
    vertical-align: middle;
    /* 1 */
    display: -ms-inline-flexbox;
    display: -webkit-inline-flex;
    display: inline-flex;
    -ms-flex-pack: center;
    -webkit-justify-content: center;
    justify-content: center;
    -ms-flex-align: center;
    -webkit-align-items: center;
    align-items: center;
    .hook-icon-button;
}

/* Hover + Focus */
.uk-icon-button:hover,
.uk-icon-button:focus {
    background-color: @icon-button-hover-background;
    color: @icon-button-hover-color;
    outline: none;
    .hook-icon-button-hover;
}

/* Active */
.uk-icon-button:active {
    background-color: @icon-button-active-background;
    color: @icon-button-active-color;
    .hook-icon-button-active;
}


// Hooks
// ========================================================================

.hook-icon-misc;

.hook-icon-hover() {}
.hook-icon-hover-hover() {}
.hook-icon-button() {}
.hook-icon-button-hover() {}
.hook-icon-button-active() {}
.hook-icon-misc() {}


// Dye
// ========================================================================

.dye-vars-default() {

    @icon-hover-color:                     @dye-muted-color;
    @icon-hover-hover-color:               @dye-color;
    @icon-button-background:               @dye-primary-background;
    @icon-button-color:                    @dye-inverse-color;
    @icon-button-hover-background:         @dye-muted-background;
    @icon-button-hover-color:              @dye-inverse-color;
    @icon-button-active-background:        fade(@dye-muted-background, 70%);
    @icon-button-active-color:             @dye-inverse-color;

}

.dye() {

    .dye-vars();
    .dye-hooks();

    //
    // Hover
    //

    .uk-icon-hover {
        color: @icon-hover-color;
        .hook-dye-icon-hover;
    }

    .uk-icon-hover:hover {
        color: @icon-hover-hover-color;
        .hook-dye-icon-hover-hover;
    }

    //
    // Button
    //

    .uk-icon-button {
        background-color: @icon-button-background;
        color: @icon-button-color;
        .hook-dye-icon-button;
    }

    .uk-icon-button:hover,
    .uk-icon-button:focus {
        background-color: @icon-button-hover-background;
        color: @icon-button-hover-color;
        .hook-dye-icon-button-hover;
    }

    .uk-icon-button:active {
        background-color: @icon-button-active-background;
        color: @icon-button-active-color;
        .hook-dye-icon-button-active;
    }

}

.hook-dye-icon-hover() {}
.hook-dye-icon-hover-hover() {}
.hook-dye-icon-button() {}
.hook-dye-icon-button-hover() {}
.hook-dye-icon-button-active() {}
