// Name:            Drop
// Description:     Component to position any element next to any other element.
//
// Component:       `uk-drop`
//
// Modifiers:       `uk-drop-top`
//                  `uk-drop-bottom`
//                  `uk-drop-left`
//                  `uk-drop-right`
//                  `uk-drop-stack`
//                  `uk-drop-grid`
//                  `uk-drop-width-2`
//                  `uk-drop-width-3`
//                  `uk-drop-width-4`
//                  `uk-drop-width-5`
//
// States:          `uk-open`
//
// Uses:            Animation
//
// ========================================================================


// Variables
// ========================================================================

@drop-z-index:                              @global-z-index + 20;
@drop-width:                                300px;
@drop-animation:                            uk-fade;
@drop-margin:                               @global-small-margin;


/* ========================================================================
   Component: Drop
 ========================================================================== */

/*
 * 1. Container fits its content
 * 2. Behave like button
 * 3. Create position context
 */

.uk-drop-container {
    /* 1 */
    display: inline-block;
    /* 2 */
    vertical-align: middle;
    /* 3 */
    position: relative;
}

/*
 * 1. Hide by default
 * 2. Set position
 * 3. Box-sizing is needed for `uk-drop-justify`
 * 4. Set a default width
 */

.uk-drop {
    /* 1 */
    display: none;
    /* 2 */
    position: absolute;
    z-index: @drop-z-index;
    /* 3 */
    box-sizing: border-box;
    /* 4 */
    width: @drop-width;
}

/*
 * 1. Show drop
 * 2. Set animation
 */

.uk-open > .uk-drop {
    /* 1 */
    display: block;
    /* 2 */
    -webkit-animation: @drop-animation 0.2s ease-in-out;
    animation: @drop-animation 0.2s ease-in-out;
}


/* Alignment modifiers
 ========================================================================== */

.uk-drop-top { margin-top: (-1 * @drop-margin); }
.uk-drop-bottom { margin-top: @drop-margin; }
.uk-drop-left { margin-left: (-1 * @drop-margin); }
.uk-drop-right { margin-left: @drop-margin; }


/* Grid modifiers
 ========================================================================== */

.uk-drop-stack .uk-drop-grid > * { width: 100% !important; }

.uk-drop-width-2:not(.uk-drop-stack) { width: (@drop-width * 2); }
.uk-drop-width-3:not(.uk-drop-stack) { width: (@drop-width * 3); }
.uk-drop-width-4:not(.uk-drop-stack) { width: (@drop-width * 4); }
.uk-drop-width-5:not(.uk-drop-stack) { width: (@drop-width * 5); }


// Hooks
// ========================================================================

.hook-drop-misc;

.hook-drop-misc() {}
